{
  "name": "lunr",
  "description": "Simple full-text search in your browser.",
  "version": "0.5.7",
  "author": {
    "name": "Oliver Nightingale"
  },
  "keywords": [
    "search"
  ],
  "homepage": "http://lunrjs.com",
  "bugs": {
    "url": "http://github.com/olivernn/lunr.js/issues"
  },
  "main": "lunr.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/codepiano/lunr.js.git"
  },
  "devDependencies": {
    "dox": "0.4.4",
    "dox-template": "0.1.1",
    "phantomjs": "1.8.1-3",
    "uglify-js": "2.4.13"
  },
  "dependencies": {
    "nodejieba": "*"
  },
  "scripts": {
    "test": "make test",
    "start": "node server.js"
  },
  "readme": "# Lunr.js\n\n[![Build Status](https://travis-ci.org/olivernn/lunr.js.png?branch=master)](https://travis-ci.org/olivernn/lunr.js)\n\nA bit like Solr, but much smaller and not as bright.\n\n## Example\n\nA very simple search index can be created using the following:\n\n```javascript\nvar idx = lunr(function () {\n    this.field('title', { boost: 10 })\n    this.field('body')\n})\n```\n\nAdding documents to be indexed is as simple as:\n\n```javascript\nvar doc = {\n    \"title\": \"Twelfth-Night\",\n    \"body\": \"If music be the food of love, play on: Give me excess of itâ€¦\",\n    \"author\": \"William Shakespeare\",\n    \"id\": 1\n}\nidx.add(doc)\n```\n\nThen searching is as simple:\n\n```javascript\nidx.search(\"love\")\n```\n\nThis returns a list of matching documents with a score of how closely they match the search query:\n\n```javascript\n[{\n    \"ref\": 1,\n    \"score\": 0.87533\n}]\n```\n\n[API documentation](http://lunrjs.com/docs) is available, as well as a [full working example](http://lunrjs.com/example/).\n\n## Description\n\nLunr.js is a small, full-text search library for use in the browser.  It indexes JSON documents and provides a simple search interface for retrieving documents that best match text queries.\n\n## Why\n\nFor web applications with all their data already sitting in the client, it makes sense to be able to search that data on the client too.  It saves adding extra, compacted services on the server.  A local search index will be quicker, there is no network overhead, and will remain available and useable even without a network connection.\n\n## Installation\n\nSimply include the lunr.js source file in the page that you want to use it.  Lunr.js is supported in all modern browsers.\n\nBrowsers that do not support ES5 will require a JavaScript shim for Lunr to work. You can either use [Augment.js](https://github.com/olivernn/augment.js), [ES5-Shim](https://github.com/kriskowal/es5-shim) or any library that patches old browsers to provide an ES5 compatible JavaScript environment.\n\n## Contributing\n\nSee the [`CONTRIBUTING.mdown` file](CONTRIBUTING.mdown).\n",
  "readmeFilename": "README.mdown",
  "_id": "lunr@0.5.7",
  "_shasum": "069e2bdf8eebb756234998036dc2dfd51dac4ec8",
  "_resolved": "git+https://github.com/codepiano/lunr.js#9dde8039ddc60ef6c06caf8455a8c6d375338443",
  "_from": "lunr@git+https://github.com/codepiano/lunr.js"
}
